{"ast":null,"code":"var _jsxFileName = \"/Users/dtak/Research/ToO/frontend/src/components/TargetForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport '../styles/TargetForm.css';\nimport { Autocomplete, TextField, Button, RadioGroup, FormControlLabel, Radio, MenuItem, Select, Checkbox } from '@mui/material';\nimport { Chart as ChartJS, LinearScale, Title, Tooltip, ScatterController } from 'chart.js';\nimport { ExpandMore, ExpandLess } from '@mui/icons-material'; // Icons for arrow\nimport SpecMode from './SpecMode';\nimport DeepMode from './DeepMode';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(LinearScale, Title, Tooltip, ScatterController);\nfunction TargetForm() {\n  _s();\n  const [targets, setTargets] = useState([]);\n  const [target, setTarget] = useState('');\n  const [ra, setRa] = useState('');\n  const [dec, setDec] = useState('');\n  const [exposure, setExposure] = useState('');\n  const [mode, setMode] = useState('Spec');\n  const [comments, setComments] = useState('');\n  const [specFileOptions, setSpecFileOptions] = useState(['specall.specmode']);\n  const [selectedSpecFile, setSelectedSpecFile] = useState('specall.specmode');\n  const [message, setMessage] = useState('');\n  const [isCustomTarget, setIsCustomTarget] = useState(true);\n  const [specFileData, setSpecFileData] = useState({});\n  const [wavelengths, setWavelengths] = useState([]);\n  const [filters, setFilters] = useState([]);\n  const [isCollapsed, setIsCollapsed] = useState(false); // Collapse state for mode options\n  const chartRef = useRef(null);\n  const [selectedFilters, setSelectedFilters] = useState(['g']); // For checkboxes\n  const [selectedNumber, setSelectedNumber] = useState(10); // For dropdown\n\n  useEffect(() => {\n    axios.get('http://127.0.0.1:5000/api/targets').then(response => setTargets(response.data)).catch(error => console.error('Error fetching targets:', error));\n  }, []);\n  useEffect(() => {\n    if (mode === 'Spec') {\n      axios.get('http://127.0.0.1:5000/api/spec-options').then(response => setSpecFileOptions(response.data)).catch(error => console.error('Error fetching spec file options:', error));\n    }\n  }, [mode]);\n  useEffect(() => {\n    if (selectedSpecFile) {\n      axios.get(`http://127.0.0.1:5000/api/spec-file?file=${selectedSpecFile}`).then(response => {\n        setWavelengths(response.data.wavelengths);\n        setFilters(response.data.filters);\n      }).catch(error => console.error('Error fetching spec file data:', error));\n    }\n  }, [selectedSpecFile]);\n  useEffect(() => {\n    if (!chartRef.current) return;\n    const ctx = chartRef.current.getContext('2d');\n    let wavelengthChart = ChartJS.getChart(ctx);\n    if (!wavelengthChart) {\n      wavelengthChart = new ChartJS(ctx, {\n        type: 'scatter',\n        data: {\n          labels: [''],\n          datasets: []\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            x: {\n              type: 'linear',\n              min: 3500,\n              max: 9500,\n              title: {\n                display: false\n              }\n            },\n            y: {\n              display: false\n            }\n          },\n          plugins: {\n            legend: {\n              display: false\n            }\n          }\n        },\n        plugins: [{\n          id: 'customSpans',\n          beforeDraw: chart => {\n            const ctx = chart.ctx;\n            const xScale = chart.scales.x;\n            wavelengths.forEach(wav => {\n              const xMin = xScale.getPixelForValue((wav - 12.5) * 10);\n              const xMax = xScale.getPixelForValue((wav + 12.5) * 10);\n              ctx.fillStyle = 'green';\n              ctx.fillRect(xMin, chart.chartArea.top, xMax - xMin, chart.chartArea.bottom - chart.chartArea.top);\n            });\n          }\n        }]\n      });\n    } else {\n      wavelengthChart.data.datasets = [];\n      wavelengthChart.update();\n    }\n    return () => {\n      var _wavelengthChart;\n      return (_wavelengthChart = wavelengthChart) === null || _wavelengthChart === void 0 ? void 0 : _wavelengthChart.destroy();\n    };\n  }, [wavelengths, mode, isCollapsed]);\n  const handleInputChange = (event, value) => {\n    setTarget(value);\n    const selectedTarget = targets.find(t => t.name === value);\n    if (selectedTarget) {\n      setRa(selectedTarget.ra);\n      setDec(selectedTarget.dec);\n      setIsCustomTarget(false);\n    } else {\n      setRa('');\n      setDec('');\n      setIsCustomTarget(true);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/api/send_email', {\n        target,\n        ra,\n        dec,\n        exposure,\n        mode\n      });\n      setMessage(response.data.message);\n    } catch (error) {\n      console.error('Error sending email:', error);\n      setMessage('Failed to submit form.');\n    }\n  };\n  const handleCheckboxChange = filter => {\n    setSelectedFilters(prev => prev.includes(filter) ? prev.filter(item => item !== filter) // Remove filter if unchecked\n    : [...prev, filter] // Add filter if checked\n    );\n  };\n  const toggleCollapse = () => {\n    setIsCollapsed(!isCollapsed);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"default-label\",\n          children: \"Target:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          options: targets,\n          getOptionLabel: option => option.name || '',\n          inputValue: target,\n          onInputChange: handleInputChange,\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            ...params,\n            label: \"Target\",\n            variant: \"outlined\",\n            fullWidth: true,\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this),\n          freeSolo: true,\n          className: \"input-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"default-label\",\n          children: \"R.A.:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"hh:mm:ss or degrees\",\n          variant: \"outlined\",\n          value: ra,\n          onChange: e => setRa(e.target.value),\n          fullWidth: true,\n          disabled: !isCustomTarget,\n          className: \"input-field\",\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"default-label\",\n          children: \"Dec.:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"dd:mm:ss or degrees\",\n          variant: \"outlined\",\n          value: dec,\n          onChange: e => setDec(e.target.value),\n          fullWidth: true,\n          disabled: !isCustomTarget,\n          className: \"input-field\",\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"default-label\",\n          children: \"Exposure:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"seconds\",\n          variant: \"outlined\",\n          value: exposure,\n          onChange: e => setExposure(e.target.value),\n          fullWidth: true,\n          className: \"input-field\",\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"default-label\",\n          children: \"Mode:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          row: true,\n          value: mode,\n          onChange: e => setMode(e.target.value),\n          className: \"radio-group\",\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"Spec\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 38\n            }, this),\n            label: \"Spec\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"Deep\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 38\n            }, this),\n            label: \"Deep\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"collapse-toggle\",\n          onClick: toggleCollapse,\n          children: [isCollapsed ? /*#__PURE__*/_jsxDEV(ExpandMore, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 40\n          }, this) : /*#__PURE__*/_jsxDEV(ExpandLess, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 57\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"collapse-text\",\n            children: isCollapsed ? 'Expand Mode Options' : 'Collapse Mode Options'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), !isCollapsed && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [mode === 'Spec' && /*#__PURE__*/_jsxDEV(SpecMode, {\n          specFileOptions: specFileOptions,\n          selectedSpecFile: selectedSpecFile,\n          setSelectedSpecFile: setSelectedSpecFile,\n          chartRef: chartRef,\n          filters: filters\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 25\n        }, this), mode === 'Deep' && /*#__PURE__*/_jsxDEV(DeepMode, {\n          selectedFilters: selectedFilters,\n          handleCheckboxChange: handleCheckboxChange,\n          selectedNumber: selectedNumber,\n          setSelectedNumber: setSelectedNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"default-label\",\n        children: \"Comments:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Any additional information\",\n        variant: \"outlined\",\n        value: comments,\n        onChange: e => setComments(e.target.value),\n        fullWidth: true,\n        className: \"input-field\",\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        className: \"submit-button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 9\n  }, this);\n}\n_s(TargetForm, \"fE7Q3VDxAeLAVb0Q+78+GpsSrMg=\");\n_c = TargetForm;\nexport default TargetForm;\nvar _c;\n$RefreshReg$(_c, \"TargetForm\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Autocomplete","TextField","Button","RadioGroup","FormControlLabel","Radio","MenuItem","Select","Checkbox","Chart","ChartJS","LinearScale","Title","Tooltip","ScatterController","ExpandMore","ExpandLess","SpecMode","DeepMode","jsxDEV","_jsxDEV","Fragment","_Fragment","register","TargetForm","_s","targets","setTargets","target","setTarget","ra","setRa","dec","setDec","exposure","setExposure","mode","setMode","comments","setComments","specFileOptions","setSpecFileOptions","selectedSpecFile","setSelectedSpecFile","message","setMessage","isCustomTarget","setIsCustomTarget","specFileData","setSpecFileData","wavelengths","setWavelengths","filters","setFilters","isCollapsed","setIsCollapsed","chartRef","selectedFilters","setSelectedFilters","selectedNumber","setSelectedNumber","get","then","response","data","catch","error","console","current","ctx","getContext","wavelengthChart","getChart","type","labels","datasets","options","responsive","maintainAspectRatio","scales","x","min","max","title","display","y","plugins","legend","id","beforeDraw","chart","xScale","forEach","wav","xMin","getPixelForValue","xMax","fillStyle","fillRect","chartArea","top","bottom","update","_wavelengthChart","destroy","handleInputChange","event","value","selectedTarget","find","t","name","handleSubmit","e","preventDefault","post","handleCheckboxChange","filter","prev","includes","item","toggleCollapse","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","getOptionLabel","option","inputValue","onInputChange","renderInput","params","label","variant","fullWidth","size","freeSolo","onChange","disabled","row","control","onClick","color","_c","$RefreshReg$"],"sources":["/Users/dtak/Research/ToO/frontend/src/components/TargetForm.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport '../styles/TargetForm.css';\nimport {\n    Autocomplete,\n    TextField,\n    Button,\n    RadioGroup,\n    FormControlLabel,\n    Radio,\n    MenuItem,\n    Select,\n    Checkbox\n} from '@mui/material';\n\nimport {\n    Chart as ChartJS,\n    LinearScale,\n    Title,\n    Tooltip,\n    ScatterController,\n} from 'chart.js';\nimport { ExpandMore, ExpandLess } from '@mui/icons-material'; // Icons for arrow\nimport SpecMode from './SpecMode';\nimport DeepMode from './DeepMode';\n\nChartJS.register(LinearScale, Title, Tooltip, ScatterController);\n\nfunction TargetForm() {\n    const [targets, setTargets] = useState([]);\n    const [target, setTarget] = useState('');\n    const [ra, setRa] = useState('');\n    const [dec, setDec] = useState('');\n    const [exposure, setExposure] = useState('');\n    const [mode, setMode] = useState('Spec'); \n    const [comments, setComments] = useState('');\n    const [specFileOptions, setSpecFileOptions] = useState(['specall.specmode']);\n    const [selectedSpecFile, setSelectedSpecFile] = useState('specall.specmode');\n    const [message, setMessage] = useState('');\n    const [isCustomTarget, setIsCustomTarget] = useState(true);\n    const [specFileData, setSpecFileData] = useState({});\n    const [wavelengths, setWavelengths] = useState([]);\n    const [filters, setFilters] = useState([]);\n    const [isCollapsed, setIsCollapsed] = useState(false); // Collapse state for mode options\n    const chartRef = useRef(null);\n\n    const [selectedFilters, setSelectedFilters] = useState(['g']); // For checkboxes\n    const [selectedNumber, setSelectedNumber] = useState(10); // For dropdown\n\n\n    useEffect(() => {\n        axios\n            .get('http://127.0.0.1:5000/api/targets')\n            .then((response) => setTargets(response.data))\n            .catch((error) => console.error('Error fetching targets:', error));\n    }, []);\n\n    useEffect(() => {\n        if (mode === 'Spec') {\n            axios\n                .get('http://127.0.0.1:5000/api/spec-options')\n                .then((response) => setSpecFileOptions(response.data))\n                .catch((error) => console.error('Error fetching spec file options:', error));\n        }\n    }, [mode]);\n\n    useEffect(() => {\n        if (selectedSpecFile) {\n            axios\n                .get(`http://127.0.0.1:5000/api/spec-file?file=${selectedSpecFile}`)\n                .then((response) => {\n                    setWavelengths(response.data.wavelengths);\n                    setFilters(response.data.filters);\n                })\n                .catch((error) => console.error('Error fetching spec file data:', error));\n        }\n    }, [selectedSpecFile]);\n\n    useEffect(() => {\n        if (!chartRef.current) return;\n\n        const ctx = chartRef.current.getContext('2d');\n        let wavelengthChart = ChartJS.getChart(ctx);\n\n        if (!wavelengthChart) {\n            wavelengthChart = new ChartJS(ctx, {\n                type: 'scatter',\n                data: { labels: [''], datasets: [] },\n                options: {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    scales: {\n                        x: { type: 'linear', min: 3500, max: 9500, title: { display: false } },\n                        y: { display: false },\n                    },\n                    plugins: { legend: { display: false } },\n                },\n                plugins: [\n                    {\n                        id: 'customSpans',\n                        beforeDraw: (chart) => {\n                            const ctx = chart.ctx;\n                            const xScale = chart.scales.x;\n                            wavelengths.forEach((wav) => {\n                                const xMin = xScale.getPixelForValue((wav - 12.5) * 10);\n                                const xMax = xScale.getPixelForValue((wav + 12.5) * 10);\n                                ctx.fillStyle = 'green';\n                                ctx.fillRect(\n                                    xMin,\n                                    chart.chartArea.top,\n                                    xMax - xMin,\n                                    chart.chartArea.bottom - chart.chartArea.top\n                                );\n                            });\n                        },\n                    },\n                ],\n            });\n        } else {\n            wavelengthChart.data.datasets = [];\n            wavelengthChart.update();\n        }\n\n        return () => wavelengthChart?.destroy();\n    }, [wavelengths, mode, isCollapsed]);\n\n    const handleInputChange = (event, value) => {\n        setTarget(value);\n        const selectedTarget = targets.find((t) => t.name === value);\n        if (selectedTarget) {\n            setRa(selectedTarget.ra);\n            setDec(selectedTarget.dec);\n            setIsCustomTarget(false);\n        } else {\n            setRa('');\n            setDec('');\n            setIsCustomTarget(true);\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await axios.post('http://127.0.0.1:5000/api/send_email', {\n                target,\n                ra,\n                dec,\n                exposure,\n                mode,\n            });\n            setMessage(response.data.message);\n        } catch (error) {\n            console.error('Error sending email:', error);\n            setMessage('Failed to submit form.');\n        }\n    };\n\n    const handleCheckboxChange = (filter) => {\n        setSelectedFilters((prev) =>\n            prev.includes(filter)\n                ? prev.filter((item) => item !== filter) // Remove filter if unchecked\n                : [...prev, filter] // Add filter if checked\n        );\n    };\n    \n    const toggleCollapse = () => {\n        setIsCollapsed(!isCollapsed);\n    };\n\n    return (\n        <div className=\"container\">\n            <form onSubmit={handleSubmit} className=\"form\">\n                <div className=\"group-container\">\n                    <label className=\"default-label\">Target:</label>\n                    <Autocomplete\n                        options={targets}\n                        getOptionLabel={(option) => option.name || ''}\n                        inputValue={target}\n                        onInputChange={handleInputChange}\n                        renderInput={(params) => (\n                            <TextField {...params} label=\"Target\" variant=\"outlined\" fullWidth size=\"small\" />\n                        )}\n                        freeSolo\n                        className=\"input-field\"\n                    />\n                </div>\n                <div className=\"group-container\">\n                    <label className=\"default-label\">R.A.:</label>\n                    <TextField\n                        label=\"hh:mm:ss or degrees\"\n                        variant=\"outlined\"\n                        value={ra}\n                        onChange={(e) => setRa(e.target.value)}\n                        fullWidth\n                        disabled={!isCustomTarget} \n                        className=\"input-field\"\n                        size=\"small\"\n                    />\n                </div>\n                <div className=\"group-container\">\n                    <label className=\"default-label\">Dec.:</label>\n                    <TextField\n                        label=\"dd:mm:ss or degrees\"\n                        variant=\"outlined\"\n                        value={dec}\n                        onChange={(e) => setDec(e.target.value)}\n                        fullWidth\n                        disabled={!isCustomTarget} \n                        className=\"input-field\"\n                        size=\"small\"\n                    />\n                </div>\n                <div className=\"group-container\">\n                    <label className=\"default-label\">Exposure:</label>\n                    <TextField\n                        label=\"seconds\"\n                        variant=\"outlined\"\n                        value={exposure}\n                        onChange={(e) => setExposure(e.target.value)}\n                        fullWidth\n                        className=\"input-field\"\n                        size=\"small\"\n                    />\n                </div>\n                <div className=\"group-container\">\n                    <label className=\"default-label\">Mode:</label>\n                    <RadioGroup\n                        row\n                        value={mode}\n                        onChange={(e) => setMode(e.target.value)}\n                        className=\"radio-group\"\n                    >   \n                        <FormControlLabel\n                            value=\"Spec\"\n                            control={<Radio />}\n                            label=\"Spec\"\n                        />\n                        <FormControlLabel\n                            value=\"Deep\"\n                            control={<Radio />}\n                            label=\"Deep\"\n                        />\n                    </RadioGroup>\n\n                    <div className=\"collapse-toggle\" onClick={toggleCollapse}>\n                        {isCollapsed ? <ExpandMore /> : <ExpandLess />}\n                        <span className=\"collapse-text\">\n                            {isCollapsed ? 'Expand Mode Options' : 'Collapse Mode Options'}\n                        </span>\n                    </div>\n\n                </div>\n\n\n\n                {/* Conditional Rendering of Mode Options */}\n                {!isCollapsed && (\n                    <>\n                    {mode === 'Spec' && (\n                        <SpecMode\n                            specFileOptions={specFileOptions}\n                            selectedSpecFile={selectedSpecFile}\n                            setSelectedSpecFile={setSelectedSpecFile}\n                            chartRef={chartRef}\n                            filters={filters}\n                        />\n                    )}\n                    {mode === 'Deep' && (\n                        <DeepMode\n                            selectedFilters={selectedFilters}\n                            handleCheckboxChange={handleCheckboxChange}\n                            selectedNumber={selectedNumber}\n                            setSelectedNumber={setSelectedNumber}\n                        />\n                    )}\n                    </>\n                )}\n                \n                <label className=\"default-label\">Comments:</label>\n                <TextField\n                        label=\"Any additional information\"\n                        variant=\"outlined\"\n                        value={comments}\n                        onChange={(e) => setComments(e.target.value)}\n                        fullWidth\n                        className=\"input-field\"\n                        size=\"small\"\n                />\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" className=\"submit-button\">\n                    Submit\n                </Button>\n            </form>\n            {message && <p className=\"message\">{message}</p>}\n        </div>\n    );\n}\n\nexport default TargetForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}