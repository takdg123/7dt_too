{"ast":null,"code":"var _jsxFileName = \"/Users/dtak/Research/ToO/frontend/src/components/WavelengthVisualization.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nfunction WavelengthVisualization() {\n  _s();\n  const [selectedSpecFile, setSelectedSpecFile] = useState('');\n  const [specFileOptions, setSpecFileOptions] = useState([]);\n  const [specFileData, setSpecFileData] = useState({});\n  useEffect(() => {\n    // Fetch available spec files\n    axios.get('http://127.0.0.1:5000/api/spec-options').then(response => setSpecFileOptions(response.data)).catch(error => console.error('Error fetching spec files:', error));\n  }, []);\n  useEffect(() => {\n    if (selectedSpecFile) {\n      // Fetch the data for the selected spec file\n      axios.get(`http://127.0.0.1:5000/api/spec-file?file=${selectedSpecFile}`).then(response => setSpecFileData(response.data)).catch(error => console.error('Error fetching spec file data:', error));\n    }\n  }, [selectedSpecFile]);\n\n  // Convert wavelength data to Chart.js-compatible format\n  const getWavelengthDatasets = () => {\n    const datasets = [];\n    Object.keys(specFileData).forEach(key => {\n      specFileData[key].forEach(value => {\n        if (value.startsWith('m')) {\n          const wavelength = parseInt(value.slice(1)) * 10; // Convert to Å\n          datasets.push({\n            label: `${key} - ${value}`,\n            backgroundColor: 'green',\n            borderColor: 'black',\n            borderWidth: 1,\n            data: [{\n              x: wavelength - 125,\n              y: key\n            }, {\n              x: wavelength + 125,\n              y: key\n            }]\n          });\n        }\n      });\n    });\n    return datasets;\n  };\n\n  // Convert filter data to Chart.js-compatible format\n  const getFilterDatasets = () => {\n    const filters = ['u', 'g', 'r', 'i', 'z'];\n    const datasets = filters.map(filter => ({\n      label: filter,\n      backgroundColor: specFileData.some(item => item.includes(filter)) ? 'blue' : 'transparent',\n      data: [filter]\n    }));\n    return datasets;\n  };\n\n  // Chart data\n  const data = {\n    datasets: [...getWavelengthDatasets(), ...getFilterDatasets()]\n  };\n\n  // Chart options\n  const options = {\n    responsive: true,\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Wavelength (Å)'\n        },\n        min: 3000,\n        max: 9000\n      },\n      y: {\n        type: 'category',\n        labels: Object.keys(specFileData),\n        title: {\n          display: true,\n          text: 'Filters and Ranges'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Wavelength Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Spec File:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedSpecFile,\n        onChange: e => setSelectedSpecFile(e.target.value),\n        children: specFileOptions.map(file => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: file,\n          children: file\n        }, file, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), selectedSpecFile && /*#__PURE__*/_jsxDEV(Bar, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n_s(WavelengthVisualization, \"/fLdyANiC1qmZiIRqLH72DeiCCs=\");\n_c = WavelengthVisualization;\nexport default WavelengthVisualization;\nvar _c;\n$RefreshReg$(_c, \"WavelengthVisualization\");","map":{"version":3,"names":["React","useState","useEffect","axios","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","register","WavelengthVisualization","_s","selectedSpecFile","setSelectedSpecFile","specFileOptions","setSpecFileOptions","specFileData","setSpecFileData","get","then","response","data","catch","error","console","getWavelengthDatasets","datasets","Object","keys","forEach","key","value","startsWith","wavelength","parseInt","slice","push","label","backgroundColor","borderColor","borderWidth","x","y","getFilterDatasets","filters","map","filter","some","item","includes","options","responsive","scales","title","display","text","min","max","type","labels","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","file","_c","$RefreshReg$"],"sources":["/Users/dtak/Research/ToO/frontend/src/components/WavelengthVisualization.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\n\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nfunction WavelengthVisualization() {\n    const [selectedSpecFile, setSelectedSpecFile] = useState('');\n    const [specFileOptions, setSpecFileOptions] = useState([]);\n    const [specFileData, setSpecFileData] = useState({});\n\n    useEffect(() => {\n        // Fetch available spec files\n        axios.get('http://127.0.0.1:5000/api/spec-options')\n            .then(response => setSpecFileOptions(response.data))\n            .catch(error => console.error('Error fetching spec files:', error));\n    }, []);\n\n    useEffect(() => {\n        if (selectedSpecFile) {\n            // Fetch the data for the selected spec file\n            axios.get(`http://127.0.0.1:5000/api/spec-file?file=${selectedSpecFile}`)\n                .then(response => setSpecFileData(response.data))\n                .catch(error => console.error('Error fetching spec file data:', error));\n        }\n    }, [selectedSpecFile]);\n\n    // Convert wavelength data to Chart.js-compatible format\n    const getWavelengthDatasets = () => {\n        const datasets = [];\n        Object.keys(specFileData).forEach((key) => {\n            specFileData[key].forEach((value) => {\n                if (value.startsWith('m')) {\n                    const wavelength = parseInt(value.slice(1)) * 10; // Convert to Å\n                    datasets.push({\n                        label: `${key} - ${value}`,\n                        backgroundColor: 'green',\n                        borderColor: 'black',\n                        borderWidth: 1,\n                        data: [{ x: wavelength - 125, y: key }, { x: wavelength + 125, y: key }],\n                    });\n                }\n            });\n        });\n        return datasets;\n    };\n\n    // Convert filter data to Chart.js-compatible format\n    const getFilterDatasets = () => {\n        const filters = ['u', 'g', 'r', 'i', 'z'];\n        const datasets = filters.map((filter) => ({\n            label: filter,\n            backgroundColor: specFileData.some((item) => item.includes(filter)) ? 'blue' : 'transparent',\n            data: [filter],\n        }));\n        return datasets;\n    };\n\n    // Chart data\n    const data = {\n        datasets: [...getWavelengthDatasets(), ...getFilterDatasets()],\n    };\n\n    // Chart options\n    const options = {\n        responsive: true,\n        scales: {\n            x: {\n                title: {\n                    display: true,\n                    text: 'Wavelength (Å)',\n                },\n                min: 3000,\n                max: 9000,\n            },\n            y: {\n                type: 'category',\n                labels: Object.keys(specFileData),\n                title: {\n                    display: true,\n                    text: 'Filters and Ranges',\n                },\n            },\n        },\n    };\n\n    return (\n        <div>\n            <h2>Wavelength Visualization</h2>\n            <div>\n                <label>Select Spec File:</label>\n                <select\n                    value={selectedSpecFile}\n                    onChange={(e) => setSelectedSpecFile(e.target.value)}\n                >\n                    {specFileOptions.map((file) => (\n                        <option key={file} value={file}>\n                            {file}\n                        </option>\n                    ))}\n                </select>\n            </div>\n            {selectedSpecFile && <Bar data={data} options={options} />}\n        </div>\n    );\n}\n\nexport default WavelengthVisualization;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}